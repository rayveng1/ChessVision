{"ast":null,"code":"var _jsxFileName = \"/Users/connorscally/Documents/GitHub/ChessVision/chessvision_frontend/src/components/roboflow.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Roboflow = props => {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  var inferRunning;\n  var model;\n\n  const startInfer = () => {\n    inferRunning = true;\n    window.roboflow.auth({\n      publishable_key: \"YOUR PUBLISHABLE ROBOFLOW API KEY\"\n    }).load({\n      model: props.modelName,\n      version: props.modelVersion,\n      onMetadata: function (m) {\n        console.log(\"model loaded\");\n      }\n    }).then(model => {\n      setInterval(() => {\n        if (inferRunning) detect(model);\n      }, 10);\n    });\n  };\n\n  useEffect(startInfer, []); // const stopInfer = () => {\n  //     inferRunning = false;\n  //     if (model) model.teardown();\n  // };\n\n  const detect = async model => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n      adjustCanvas(videoWidth, videoHeight);\n      const detections = await model.detect(webcamRef.current.video);\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawBoxes(detections, ctx);\n    }\n  };\n\n  const adjustCanvas = (w, h) => {\n    canvasRef.current.width = w * window.devicePixelRatio;\n    canvasRef.current.height = h * window.devicePixelRatio;\n    canvasRef.current.style.width = w + \"px\";\n    canvasRef.current.style.height = h + \"px\";\n    canvasRef.current.getContext(\"2d\").scale(window.devicePixelRatio, window.devicePixelRatio);\n  };\n\n  const drawBoxes = (detections, ctx) => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    detections.forEach(row => {\n      if (true) {\n        //video\n        var temp = row.bbox;\n        temp.class = row.class;\n        temp.color = row.color;\n        temp.confidence = row.confidence;\n        row = temp;\n      }\n\n      if (row.confidence < 0) return; //dimensions\n\n      var x = row.x - row.width / 2;\n      var y = row.y - row.height / 2;\n      var w = row.width;\n      var h = row.height; //box\n\n      ctx.beginPath();\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = row.color;\n      ctx.rect(x, y, w, h);\n      ctx.stroke(); //shade\n\n      ctx.fillStyle = \"black\";\n      ctx.globalAlpha = 0.2;\n      ctx.fillRect(x, y, w, h);\n      ctx.globalAlpha = 1.0; //label\n\n      var fontColor = \"black\";\n      var fontSize = 12;\n      ctx.font = `${fontSize}px monospace`;\n      ctx.textAlign = \"center\";\n      var classTxt = row.class;\n      var confTxt = (row.confidence * 100).toFixed().toString() + \"%\";\n      var msgTxt = classTxt + \" \" + confTxt;\n      const textHeight = fontSize;\n      var textWidth = ctx.measureText(msgTxt).width;\n\n      if (textHeight <= h && textWidth <= w) {\n        ctx.strokeStyle = row.color;\n        ctx.fillStyle = row.color;\n        ctx.fillRect(x - ctx.lineWidth / 2, y - textHeight - ctx.lineWidth, textWidth + 2, textHeight + 1);\n        ctx.stroke();\n        ctx.fillStyle = fontColor;\n        ctx.fillText(msgTxt, x + textWidth / 2 + 1, y - 1);\n      } else {\n        textWidth = ctx.measureText(confTxt).width;\n        ctx.strokeStyle = row.color;\n        ctx.fillStyle = row.color;\n        ctx.fillRect(x - ctx.lineWidth / 2, y - textHeight - ctx.lineWidth, textWidth + 2, textHeight + 1);\n        ctx.stroke();\n        ctx.fillStyle = fontColor;\n        ctx.fillText(confTxt, x + textWidth / 2 + 1, y - 1);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      muted: true,\n      className: \"absolute mx-auto left-0 right-0 text-center z-10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"absolute mx-auto left-0 right-0 text-center z-20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Roboflow, \"v4cpjlVQ0JCDZnPWaD3Z9DHNiTM=\");\n\n_c = Roboflow;\nexport default Roboflow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roboflow\");","map":{"version":3,"names":["useRef","useEffect","Webcam","Roboflow","props","webcamRef","canvasRef","inferRunning","model","startInfer","window","roboflow","auth","publishable_key","load","modelName","version","modelVersion","onMetadata","m","console","log","then","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","adjustCanvas","detections","ctx","getContext","drawBoxes","w","h","devicePixelRatio","style","scale","clearRect","forEach","row","temp","bbox","class","color","confidence","x","y","beginPath","lineWidth","strokeStyle","rect","stroke","fillStyle","globalAlpha","fillRect","fontColor","fontSize","font","textAlign","classTxt","confTxt","toFixed","toString","msgTxt","textHeight","textWidth","measureText","fillText"],"sources":["/Users/connorscally/Documents/GitHub/ChessVision/chessvision_frontend/src/components/roboflow.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst Roboflow = (props) => {\n    const webcamRef = useRef(null);\n    const canvasRef = useRef(null);\n    var inferRunning;\n    var model;\n\n    const startInfer = () => {\n        inferRunning = true;\n        window.roboflow\n            .auth({\n                publishable_key: \"YOUR PUBLISHABLE ROBOFLOW API KEY\"\n            })\n            .load({\n                model: props.modelName,\n                version: props.modelVersion,\n                onMetadata: function (m) {\n                    console.log(\"model loaded\");\n                }\n            }).then((model) => {\n                setInterval(() => {\n                    if (inferRunning) detect(model);\n                }, 10);\n            });\n    };\n\n    useEffect(startInfer, []);\n\n    // const stopInfer = () => {\n    //     inferRunning = false;\n    //     if (model) model.teardown();\n    // };\n\n    const detect = async (model) => {\n        // Check data is available\n        if (\n            typeof webcamRef.current !== \"undefined\" &&\n            webcamRef.current !== null &&\n            webcamRef.current.video.readyState === 4\n        ) {\n            const videoWidth = webcamRef.current.video.videoWidth;\n            const videoHeight = webcamRef.current.video.videoHeight;\n\n            webcamRef.current.video.width = videoWidth;\n            webcamRef.current.video.height = videoHeight;\n\n            adjustCanvas(videoWidth, videoHeight);\n\n            const detections = await model.detect(webcamRef.current.video);\n\n            const ctx = canvasRef.current.getContext(\"2d\");\n            drawBoxes(detections, ctx);\n        }\n    };\n\n    const adjustCanvas = (w, h) => {\n        canvasRef.current.width = w * window.devicePixelRatio;\n        canvasRef.current.height = h * window.devicePixelRatio;\n\n        canvasRef.current.style.width = w + \"px\";\n        canvasRef.current.style.height = h + \"px\";\n\n        canvasRef.current.getContext(\"2d\").scale(window.devicePixelRatio, window.devicePixelRatio);\n    };\n\n    const drawBoxes = (detections, ctx) => {\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        detections.forEach((row) => {\n            if (true) {\n                //video\n                var temp = row.bbox;\n                temp.class = row.class;\n                temp.color = row.color;\n                temp.confidence = row.confidence;\n                row = temp;\n            }\n\n            if (row.confidence < 0) return;\n\n            //dimensions\n            var x = row.x - row.width / 2;\n            var y = row.y - row.height / 2;\n            var w = row.width;\n            var h = row.height;\n\n            //box\n            ctx.beginPath();\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = row.color;\n            ctx.rect(x, y, w, h);\n            ctx.stroke();\n\n            //shade\n            ctx.fillStyle = \"black\";\n            ctx.globalAlpha = 0.2;\n            ctx.fillRect(x, y, w, h);\n            ctx.globalAlpha = 1.0;\n\n            //label\n            var fontColor = \"black\";\n            var fontSize = 12;\n            ctx.font = `${fontSize}px monospace`;\n            ctx.textAlign = \"center\";\n            var classTxt = row.class;\n            var confTxt = (row.confidence * 100).toFixed().toString() + \"%\";\n            var msgTxt = classTxt + \" \" + confTxt;\n            const textHeight = fontSize;\n            var textWidth = ctx.measureText(msgTxt).width;\n\n            if (textHeight <= h && textWidth <= w) {\n                ctx.strokeStyle = row.color;\n                ctx.fillStyle = row.color;\n                ctx.fillRect(\n                    x - ctx.lineWidth / 2,\n                    y - textHeight - ctx.lineWidth,\n                    textWidth + 2,\n                    textHeight + 1\n                );\n                ctx.stroke();\n                ctx.fillStyle = fontColor;\n                ctx.fillText(msgTxt, x + textWidth / 2 + 1, y - 1);\n            } else {\n                textWidth = ctx.measureText(confTxt).width;\n                ctx.strokeStyle = row.color;\n                ctx.fillStyle = row.color;\n                ctx.fillRect(\n                    x - ctx.lineWidth / 2,\n                    y - textHeight - ctx.lineWidth,\n                    textWidth + 2,\n                    textHeight + 1\n                );\n                ctx.stroke();\n                ctx.fillStyle = fontColor;\n                ctx.fillText(confTxt, x + textWidth / 2 + 1, y - 1);\n            }\n        });\n    };\n\n    return (\n        <>\n            <Webcam\n                ref={webcamRef}\n                muted={true}\n                className=\"absolute mx-auto left-0 right-0 text-center z-10\"\n            />\n            <canvas ref={canvasRef} className=\"absolute mx-auto left-0 right-0 text-center z-20\" />\n        </>\n    );\n};\n\nexport default Roboflow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}